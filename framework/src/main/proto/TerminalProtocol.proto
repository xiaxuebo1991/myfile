//  终端与服务器之间的交互协议
///************************************
//版本信息
//  version: v17.12.14.01
///************************************
syntax = "proto2";

option java_package = "com.ucloudlink.framework.protocol.protobuf";
option java_outer_classname = "TerminalProtocol";
option optimize_for = LITE_RUNTIME;

import "common.proto";

enum AppCmd{
	//登录
	CMD_LOGIN_REQ = 1;
	CMD_LOGIN_RESP = 2; 
	CMD_LOGOUT_REQ = 3; 
	CMD_LOGOUT_RESP = 4; 
	CMD_SERVICELIST_REQ = 5;
	CMD_SERVICELIST_RESP = 6 ;

	CMD_HEART_BEAT =7;
	CMD_HEART_BEAT_RESP =8;
	//分卡
	CMD_DSIPACTH_VSIM_REQ = 9;
	CMD_DISPACTH_VISM_RESP = 10;
	CMD_SWITCH_VSIM_REQ = 11;
	CMD_SWITCH_VISM_RESP = 12;
	//计费
	CMD_UF_REQ= 13;
	CMD_UF_RESP= 14;
	CMD_UF_SUPPLEMENT_REQ= 15;
	CMD_UF_SUPPLEMENT_RESP= 16;
	//BAM 相关
	CMD_APDU_REQ= 17;
	CMD_APDU_RESP= 18;
	CMD_VISM_INFO_REQ = 19;
	CMD_VISM_INFO_RESP = 20;
	CMD_BIN_FILE_REQ = 21;
	CMD_BIN_FILE_RESP = 22;
	
	CMD_RESET_VSIM_REQ = 23;
	CMD_RESET_VSIM_RESP = 24;
	CMD_SPEED_DETECTION_REQ = 25;
	CMD_SPEED_DETECTION_RESP = 26;
	CMD_S2C_REQ = 27;
	CMD_S2C_RESP = 28;
	CMD_REPORT_SEARCH_NET_RESULT = 29;	//终端上报搜网结果
	CMD_REPORT_SEARCH_NET_RESULT_RESP = 30;
	CMD_UPLOAD_BASIC_INFO = 31;	//上传终端基本信息
	CMD_UPLOAD_BASIC_INFO_RESP = 32;
	CMD_UPLOAD_CURRENT_SPEED = 33;//上报限速结果 
	CMD_UPLOAD_CURRENT_SPEED_RESP = 34;
	
	CMD_PERFORMANCE_LOG_REPORT = 35;//性能日志
	CMD_PERFORMANCE_LOG_REPORT_RESP = 36;
	CMD_UPLOAD_SPEED_DETECTION_RESULT = 37;//上报测速结果
	CMD_UPLOAD_SPEED_DETECTION_RESULT_RESP = 38;
	CMD_UPLOAD_SESSIONID_REQ = 39;//上报SESSIONID
	CMD_UPLOAD_SESSION_RESP = 40;//上报SESSIONID响应
	CMD_QXDM_CFG_INFO = 41;//上传QXDM配置信息
	CMD_QXDM_CFG_INFO_RESP = 42;//上传QXDM配置信息
	
	CMD_UPLOAD_NETWORK_STATE = 43;
	CMD_UPLOAD_NETWORK_STATE_RESP = 44;
	CMD_TER_SLEEP_NOTICE_REQ = 45;
	CMD_TER_SLEEP_NOTICE_RESP = 46;
	CMD_QUERY_USER_ACOUNT_REQ = 47;
	CMD_QUERY_USER_ACOUNT_RESP = 48;
	CMD_SYSTEM_CONFIG_DATA_REQ = 49;
	CMD_SYSTEM_CONFIG_DATA_RESP = 50;
	CMD_UPLOAD_GPS_CFG = 51;
	CMD_UPLOAD_GPS_CFG_RESP = 52;
	CMD_FLOW_AUTH_REQ = 53; //流量授权请求
	CMD_FLOW_AUTH_RESP = 54;  //流量授权响应


	CMD_RTU_SEND_SMS_RESULT_REPORT = 55;//上报发短信结果
	CMD_RTU_SEND_SMS_RESULT_REPORT_RESP = 56;//上报发短信结果响应

	CMD_RTU_PHOEN_CALL_RESULT_REPORT = 57;//上报打电话结果
	CMD_RTU_PHOEN_CALL_RESULT_REPORT_RESP = 58;//上报打电话结果响应
	
	CMD_RTU_SEND_SMS_UNSOLI = 59;//终端接收短信上报
	CMD_RTU_SEND_SMS_UNSOLI_RESP = 60;//终端接收短信上报响应
	
	CMD_RTU_REMOTE_AT_RESULT_REPORT = 61;//上报远程AT返回结果
	CMD_RTU_REMOTE_AT_RESULT_REPORT_RESP = 62;//上报远程AT返回结果响应
	
	CMD_RTU_TASK_REQ	= 63;//下发rtu任务
	CMD_RTU_TASK_REQ_ACK = 64;//终端响应服务器rtu任务下发命令
	CMD_RTU_TASK_RESULT_UPLOAD = 65;//上报RTU内容
	CMD_RTU_TASK_RESULT_UPLOAD_RESP = 66;//上报rtu内容相应
	
	CMD_PHYSIM_LOGIN_REQ = 67;          //实体卡登录请求
	CMD_PHYSIM_LOGIN_RESP = 68;         //实体卡登录响应
	CMD_PHYSIM_LOGOUT_REQ = 69;         //实体卡退出请求
	CMD_PHYSIM_LOGOUT_RESP = 70;        //实体卡退出响应
	CMD_PHYSIM_HEART_BEAT = 71;         //实体卡心跳请求
	CMD_PHYSIM_HEART_BEAT_RESP = 72;    //实体卡心跳响应
	CMD_PHYSIM_UF_REQ = 73;             //实体卡流量上报请求
	CMD_PHYSIM_UF_RESP = 74;            //实体卡流量上报响应
	
	CMD_REPORT_AUTO_SWITCH_VSIM_CFG = 75;//上传自动换卡配置
	CMD_REPORT_AUTO_SWITCH_VSIM_CFG_RESP = 76;
	
	CMD_GET_USER_ACCOUNT_DISPLAY_REQ = 77;//账号显示信息请求
	CMD_GET_USER_ACCOUNT_DISPLAY_RESP = 78;//账号显示信息相应
	
	CMD_UPLOAD_LAC_CHANGE = 79;//上报lac变化
	CMD_UPLOAD_LAC_CHANGE_RESP = 80;//上报lac变化相应
	
	CMD_SOFTSIM_STATUS_UPDATE_REQ = 81; //softsim更新请求
	CMD_SOFTSIM_STATUS_UPDATE_RESP = 82;
	CMD_SOFTSIM_DISPATCH_REQ = 83; //softsim分卡请求
	CMD_SOFTSIM_DISPATCH_RESP = 84;
	CMD_SOFTSIM_GET_SIMINFO_REQ = 85; //softsim信息获取
	CMD_SOFTSIM_GET_SIMINFO_RESP = 86;
	CMD_SOFTSIM_GET_BIN_REQ = 87;  //softsim bin文件获取
	CMD_SOFTSIM_GET_BIN_RESP = 88; 
	CMD_SOFTSIM_UPLOAD_FLOW_REQ = 89; //softsim流量上报
	CMD_SOFTSIM_UPLOAD_FLOW_RESP = 90; 
	
	CMD_SIMPLE_LOGIN_REQ = 91;
	CMD_SIMPLE_LOGIN_RSP = 92;
	CMD_SIMPLE_LOGOUT_REQ = 93;
	CMD_SIMPLE_LOGOUT_RSP = 94;
	
	CMD_NOTIFY_REQ = 95;	//请求系统通知
	CMD_NOTIFY_RSP = 96;	//回复系统通知
	CMD_EXTSOFTSIM_REQ = 97;	// 副板软卡请求 
	CMD_EXTSOFTSIM_RSP = 98;	// 副板软卡响应 
	
	CMD_EXTSOFTSIM_RECLAIM_REQ = 99;	// 副板软卡释放请求 
	CMD_EXTSOFTSIM_RECLAIM_RSP = 100;	// 副板软卡释放响应 

	CMD_EXTSOFTSIM_GETBIN_REQ = 101;	// 副板取软卡bin文件请求 
	CMD_EXTSOFTSIM_GETBIN_RSP = 102;	// 副板取软卡bin文件响应 
	
	CMD_EXTSOFTSIM_UPLOAD_LIST_REQ = 103;	// 上报副板软卡列表请求 
	CMD_EXTSOFTSIM_UPLOAD_LIST_RSP = 104;	// 上报副板软卡列表响应 
	
	CMD_EXTSOFTSIM_RULE_LIST_REQ = 105;	// 副板软卡替换硬卡规则列表请求 
	CMD_EXTSOFTSIM_RULE_LIST_RSP = 106;	// 副板软卡替换硬卡规则列表响应 
	
	CMD_EXTSOFTSIM_UPDATE_STATUS_REQ = 107;
	CMD_EXTSOFTSIM_UPDATE_STATUS_RSP = 108;
	
	CMD_EXTSOFTSIM_UPLOAD_ERROR_REQ = 109;
	CMD_EXTSOFTSIM_UPLOAD_ERROR_RSP = 110;
	
	CMD_EXTSOFTSIM_WARNING_REQ = 111;
	CMD_EXTSOFTSIM_WARNING_RSP = 112;
	
	CMD_EXTSOFTSIM_UPDATE_IMSI_INFO_REQ = 113;
	CMD_EXTSOFTSIM_UPDATE_IMSI_INFO_RSP = 114;
	
	CMD_FREQUENT_AUTH_DETECTION_RESULT_REQ = 115;
	CMD_FREQUENT_AUTH_DETECTION_RESULT_RSP = 116;
	
	CMD_CLOUDSIM_SOCKET_OK_REQ = 117;
	CMD_CLOUDSIM_SOCKET_OK_RSP = 118;
	
	CMD_MAX = 200;
}


//登陆 
message LoginReq{
	required uint32 loginType =1;    //0:绑定;1:用户名密码
	required string usercode = 2;    //用户名
	required string password = 3;    //密码
	required uint64 imei = 4;        //终端设备号
	required uint64 seedimsi = 5;    //种子卡ICCID
	required string seediccid = 6;   //种子卡IMSI	
	required string deviceType = 7;  //类型 G1 G1S G2 E1 G3 P2
	required string version = 8;     //终端软件版本
	required string  plmn = 9;       //登陆区域
	required uint32 lac = 10;
	required uint32 cid = 11;
	optional uint32 devStartTime =12;//开机时间
	optional string flag = 13;//自定义路由标示
	optional uint32 supportFlowAuth = 14; // 是否支持流量预授权 1：支持  0 不支持  没有该字段也表示不支持
	optional uint32 loginReason = 15; // 登录原因   1：正常登录  2：session超时登录  3：大循环导致重登陆  4：s2c命令重登陆  5：路由重定向  6：跨境 7:modem reset
}

message Ipv6NetAddr{
	// uint16 addr[8];
	repeated uint32 addr = 1;
}


//登陆响应 cmdCode=10001
message LoginResp{
	required uint32 errorCode = 1; //100 成功，其它错误码待定义
	optional string sessionId = 2; //ass返回的sessionID，后续请求都要求携带
	optional string usercode = 3; //
	optional string password = 4; //
	//增加服务器时间
	optional double serverTime = 5;
	optional string accessToken=6; //token验证码留给设备APP
}

//查询用户套餐余额 
message QueryUserAcountReq{

}

enum userTypeAccount{
	USER_TYPE_ACCOUNT_PERSONAL = 0;
	USER_TYPE_ACCOUNT_AGENT_TO_PERSONAL = 1;
	USER_TYPE_ACCOUNT_AGENT = 2;
	USER_TYPE_ACCOUNT_RENT = 3;
}

//响应 
message QueryUserAcountResp{
 	required uint32 errorCode = 1;
	optional float amount = 2;
	optional float rate = 3;
	optional string mcc =4;
	repeated AcountPackage packages=5;
	optional bool isShow3G = 6;
	optional userTypeAccount userType =7 ; //0：个人，1：代理转个人，2：代理购买套餐，3：租赁"
	optional uint64 accumulatedFlow =8;//累计使用的流量(byte)
	optional string reserved = 9;//保留字段			
}

message AcountPackage{
	required uint64 intflowbyte = 1;//套餐初始流量
	required uint64 surplusflowbyte = 2;//套餐可用流量
	required uint64 activationtime =3 ;//套餐激活时间
	required uint64 expiretime = 4;//套餐到期时间
	required string packagename =  5;//
	required bool isused = 6;//是否在此套餐扣费
}
//退出登录 cmdCode=10002
message LogoutReq{
	optional uint32 cause = 1;//退出原因 
}

//退出登录响应 cmdCode=10003
message LogoutResp{
	required uint32 errorCode  = 1;
}

//登陆成功后查询用户服务列表  cmdCode=10004
message QueryUserParamReq{
	optional string mcc =1;//请求国家码

}

//服务列表查询响应  cmdCode=10005
message QueryUserServiceListResp{
	 required uint32 errorCode = 1;
	 optional string cause=2;
	 repeated ServiceCodeValueList serCodeValueList = 3;
}

message ServiceCodeValueList{
	optional string code = 1;
	repeated ServiceParamValue paramValues = 2;
}

message ServiceParamValue{
	optional string param = 1;
	optional string value = 2;
}


//session过期 cmdCode = 10009
message SessionTimeOut{
	required uint32 errorCode = 1;
}


//心跳  cmdCode = 10010
message HeartBeat{

}

//心跳响应 cmdCode = 10011
message HeartBeatResp{
}

//---

//-------------------------
//message PlmnInfo {//用于分卡请求
//	required string plmn = 1;   // PLMN（Public Land Mobile Network），公共陆地移动网络
//	//0:CDMA;1:HDR;2:GSM;3:WCDMA;4:LTE;5:TDS
//	optional uint32  rat  = 2;   // rat（Radio Access Type），无线接入类型 2g 3g
//	optional uint32  rssi=  3;   // rssi信号强度
//	optional uint32  band = 4 ;// 网络频段
//}



//Uint32 supportedRat : 定义卡支持的制式，下发格式，按位定义支持的网络制式:
//RAT_CDMA_RADIO          --0
//RAT_HDR_RADIO            --1
//RAT_GSM_RADIO            --2
//RAT_WCDMA_RADIO         --3
//RAT_LTE_RADIO             --4
//RAT_TDS_RADIO             --5
//例如下发联通4g卡，可支持的网络制式为：011100；


message EquivalentPlmnInfo {//用于分卡/换卡响应
	required uint32	plmnType = 1;//0:hplmn;1:eplmn
	required string	plmn = 2;   // PLMN（Public Land Mobile Network），公共陆地移动网络
	//supportedRat : 定义卡支持的制式，下发格式，按位定义支持的网络制式:
	//RAT_CDMA_RADIO          --0
	//RAT_HDR_RADIO            --1
	//RAT_GSM_RADIO            --2
	//RAT_WCDMA_RADIO         --3
	//RAT_LTE_RADIO             --4
	//RAT_TDS_RADIO             --5
	//例如下发联通4g卡，可支持的网络制式为：011100；
	required uint32 supportedRat = 3;//说明见上
	optional uint32 uc_3gpp_2gband = 4 ;//增加频段信息。
	optional uint64 uc_3gpp_3gband = 5 ;
	optional uint64 uc_3gpp_4gband = 6 ;
	optional uint32 uc_3gpp2_band = 7;
}

//流量授权相关参数
message FlowAuthParam { // 用于分卡/换卡响应 流量参数
    optional uint64 overdraft = 1;  // 透支额度
    optional uint64 overdraft_upload_threhold = 2; // 透支额度上报阀值
    optional uint32 overdraft_upload_interval = 3; // 透支额度上报时间间隔
    optional uint32 init_req_resend_interval = 4;  // initial请求重发间隔
}


//分卡 cmdCode=20000
message DispatchVsimReq{
	repeated PlmnInfo plmnList  = 1;//MCC+MNC列表分卡依据(当前采用)
	optional uint32 lac =2 ;//位置区码//4,5调整下位置。
	optional uint32 cellid =3; //手机信号覆盖区域的的编号
	optional double  longitude = 4;//经度
	optional double  latitude = 5;//纬度
}

//分卡响应 cmdCode=20001
	message DispatchVsimResp{
	required int32 errorCode = 1; //错误码  100 成功,其它错误码待定义
	optional uint64 imsi =2; //vsim 卡号
	//增加虚拟IMEI号字段
	optional uint64 virtualImei =3;
	// APN 
	//APN格式:APN,用户名,密码,身份验证类型(NULL 0 PAP 1 CHAP 2 PAPorCHAP 3),APN类型(default supl ia),APN协议(IP,IPV6,IPV4V6),APN漫游协议(IP,IPV6,IPV4V6),主DNS,副DNS,PLMN
	//例如：yuxi,,,3,default,IP,,,,46001,2gnet,,,,ia,IP,,,,46000,3wanglian,,,3,lte,IP,,,,46000
	optional string apn = 4;  	
	optional uint32 vsim_roam_enable = 5;//是否允许vsim漫游，1: 允许，0：禁止
	optional uint32 rat = 6;
	repeated EquivalentPlmnInfo eplmnList = 7;	//结构说明见上
	//增加BAM APDU路由对应的IP和端口
	optional uint32 bamRouterIpv4Addr = 8;
	optional uint32 bamRouterIpv4Port= 9;
	optional Ipv6NetAddr bamRouterIpv6Addr = 10;
	optional uint32 bamRouterIpv6Port= 11;
	optional FlowAuthParam flowauthParam = 12;
	optional string domainName=13;
}
//换卡和分卡响应的rat定义
//rat 定义卡支持的制式，下发格式，按位定义支持的网络制式:
         //RAT_CDMA_RADIO          --0
         //RAT_HDR_RADIO            --1
         //RAT_GSM_RADIO            --2
         //RAT_WCDMA_RADIO         --3
         //RAT_LTE_RADIO             --4
         //RAT_TDS_RADIO             --5

         //例如下发联通4g卡，可支持的网络制式为：011100；

//换卡请求 cmdCode=20002
message SwitchVsimReq{
	// 细分具体原因，带上错误码
	required 	uint32 cause = 1;
	optional 	uint32 subCause = 2;
	repeated PlmnInfo plmnList  = 3;//MCC+MNC列表分卡依据(当前采用)
	optional uint32 lac =4;//位置区码
	optional uint32 cellid = 5; //手机信号覆盖区域的的编号
	optional double  longitude = 6;//经度
	optional double  latitude = 7;//纬度
}

//换卡请求响应 cmdCode=20003
	message SwitchVsimResp{
	required int32 errorCode = 1; //错误码  100 成功,其它错误码待定义
	optional uint64 imsi =2; //vsim 卡号
	//增加虚拟IMEI号字段
	optional uint64 virtualImei =3;
	// APN 
	optional string  apn = 4;
	optional uint32 vsim_roam_enable = 5;//是否允许vsim漫游，1:允许，0:禁止
	optional uint32 rat = 6;
	repeated EquivalentPlmnInfo eplmnlist = 7;	//结构说明见上
	//增加BAM APDU路由对应的IP和端口
	optional uint32 bamRouterIpv4Addr = 8;
	optional uint32 bamRouterIpv4Port= 9;
	optional Ipv6NetAddr bamRouterIpv6Addr = 10;
	optional uint32 bamRouterIpv6Port= 11;
	optional FlowAuthParam flowauthParam = 12;
	optional string domainName=13;
}

//-----------------------------------计费-------------------------------------
//流量上报   cmdCode=30000
message UploadFlowsizeReq{
	required  uint32 ufId = 1; //日志ID,GUID 全球唯一码，全局唯一
	required  uint64 imsi = 2;
	required  uint64 flowSizeup = 3; //上行使用的差量流量，字节为单位
	required  uint64 flowSizedown =4 ; //下行使用的差量流量，字节为单位
	// 增加系统业务流量区分上下行
	required  uint64 systemFlowSizeUp = 5;
	required  uint64 systemFlowSizeDown =6;
	//种子卡流量分上下行，种子SIM使用的流量，字节为单位
	optional  uint64 seedflowSizeUp = 7;
	optional  uint64 seedflowSizeDown = 8;
	//增加位置信息
	required  string plmn = 9;
	optional  uint32 lac = 10;
	optional  uint32 cid = 11;
	//增加位置信息，经纬度
	optional double  longitude = 12;
	optional double  latitude = 13;
}

//uf响应  cmdCode=30001
message UploadFlowsizeResp{
	required int32 errorCode = 1; //错误码  100 成功,其它错误码待定义
}

//流量补报 cmdCode=30002
message SupplemenUploadFlowsize{
	required uint64 imei = 1;
	repeated SupplemenUf supplementUf= 2;
}

message SupplemenUf{
	optional string sessionId = 1;
	required string usercode = 2;
	required uint32 logid = 3;
	required uint64 imsi = 4;
	required uint64 starttime = 5; 
	required uint64 endtime = 6;  
	required uint64 upFlow =  7; //上行流量
	required uint64 downFlow = 8; //下行流量
	// 增加系统业务流量，区分上下行
	optional uint64 systemFlowSizeUp = 9;
	optional uint64 systemFlowSizeDown = 10;
	
	optional string plmn = 11;
	optional uint32 lac = 12;
	optional uint32 cid = 13;
	optional  double  longitude = 14;
	optional  double  latitude = 15;

}
//cmdCode=30002
message SupplemenUploadFlowsizeResp{
	required uint32 errorCode =  1;
}

//--------------------------BAM 服务--------------------------------------
//ADDU鉴权 cmdCode=40002
message ApduAuth{
	required uint64 imsi = 1;// vSim 号码
	required bytes data = 2;//数据包
	optional uint32 serial =3;
	optional bytes fileID =4;
	optional uint64 seedflowsiz = 5 ;
}

//apdu 请求响应 cmd=40003
message ApduAuthResp{
	required uint32 errorCode = 1;// 错误码 100 成功 ,
	optional bytes data = 2; //返回的apdu数据包
}


//获取BinFile cmd=40004
message GetVsimInfoReq{
	required uint32 vsimsupportlist = 1;//使用方案
}

//响应  cmd=40005
message GetVsimInfoResp{
	required uint32 errorCode = 1;//100:成功；其他：失败
	optional uint32 vsimscheme = 2;//使用方案
	optional uint32 delete_flag = 3;//文件删除flag
	optional string vsimcomversion = 4;//通用文件版本号
	optional string vsimdiffversion = 5;//差异文件版本号
}

//getBinFile cmd=40006
message GetBinFileReq{
	required uint32 binfd = 1;//文件类型差异文件/通用文件
}

//getBinFile Resp  cmd=40007
message GetBinFileResp{
	required uint32 errorCode = 1;//100:成功；其他：失败
	optional uint32 binfd =2 ;//请求下载文件类型
	optional uint32 packettotal = 3;//bin文件总包数
	optional uint32 sizetotal = 4;//bin文件总大小
	optional uint32 packetindex = 5;//packetindex
	optional uint32 count = 6;//当前包字节数
	optional bytes  data = 7;//数据
}

///******************************重置vsim请求  cmd******************************/

message Reset_VsimReq {
	required uint64 imsi = 1;// vSim 号码
    optional uint32 resetCause = 2;//复位原因
}

message ResetVsimResp {
	required uint32 errorCode = 1;//100:成功；其他：失败
}

///******************************请求检测网址  cmd******************************/
message SpeedDetectionUrlReq{
	repeated PlmnInfo plmn = 1;//
	required uint32 lac = 2;// 位置
	required uint32 strength = 3;//信号强度
	required uint32 scope = 4;//适用范围
}

// bitmap  
enum speedActionTypeE{
	SPEED_ACTION_TYPE_PING = 1;
	SPEED_ACTION_TYPE_DNS = 2;
	SPEED_ACTION_TYPE_HTTP = 4;
	SPEED_ACTION_TYPE_HTTP_DOWNLOAD = 8;
}

//请求检测网址响应 cmdcode= 50009
message SpeedDetectionUrlResp{
	required uint32  errorCode =1 ; //100成功
	repeated PlmnInfo plmnarray = 2; //plmn数组, 最多8个
	optional uint32 lac = 3 ; //位置区ID
	optional uint32 sn = 4; //url组编号
	optional uint32 actionType = 5; //用一个字节表示：1为ping, 2为dns, 4为http 头, 8为http下载
	repeated string urls = 6;//网址数组, 最多5个网址, 每个网址最多64个字符  
	optional uint32 delayTime = 7; //ping阀值(新增)
	optional uint32 downloadRate = 8;//下载速率（新增） 
}


//说明 s2c 和c2s ass不用解析相应的内容，直接把数据包传递给相应的服务，相应的服务需要根据
//TerminalProtocol_detial.proto文件解析内容

//S2C命令
message S2c_cmd_req{
	required bytes data = 1;
}

message S2c_cmd_resp{
	required uint32 reval_int = 1;
}

///****************************** 终端上报搜网结果******************************/

message Report_SearchNet_Result{
	repeated PlmnInfo  plmn = 1;
	optional uint32 smartPriorityEN = 2; //服务器用来区分是否支持智能优选，0：不支持，1：支持
	optional uint32 eventReason = 3;	 //触发搜网原因值 EventTypE
}

message report_searchnet_result_resp{
	required uint32 errorCode = 1;
}

///******************************上传终端基本信息******************************/
message Upload_basic_info{
	required uint64 imei =1;
	required string board_soft_version =2;
}

message upload_basic_info_resp{
	required uint32 errorCode = 1;
}

///******************************上报限速结果  cmd******************************/

enum speed_limit_cuase{
	SPEED_LIMIT_CAUSE_QOS_SUCC = 0;
	SPEED_LIMIT_CAUSE_QOS_FAIL = 1;
	SPEED_LIMIT_CAUSE_QUERY_QOS = 2;
	SPEED_LIMIT_CAUSE_QOS_PRIORITY_ERROR = 3;
}
 
enum speed_limit_req_from{
	SPEED_LIMIT_REQUEST_FROM_CLIENT = 1;
	SPEED_LIMIT_REQUEST_FROM_NETWORK = 2;
}

message Upload_Current_Speed{
	required string flow_id = 1;
	required speed_limit_cuase upload_cause = 2; //0: qos success, 1: qos fail, 2:query 
	optional speed_limit_req_from qos_direct = 3;//1: by client, 2: by network
	optional uint32 qos_ulspeed = 4; //查询的时候填，单位kbps
	optional uint32 qos_dlspeed = 5;//查询的时候填，单位kbps
	optional uint32 rat = 6;
	optional uint32 cmd_source = 7;//命令源//1:OCS;2:CSS;3:OSS
	optional uint32 priority_level = 8;//限速优先级 
	optional uint32 if_display = 9;//是否显示限速  1显示，0不显示
}

 message upload_current_speed_resp{
	required uint32 errorCode = 1;
}
///******************************性能日志C2S_MONITOR_INFO_LOG_REPORT******************************/
message Performance_log_report{
	required bytes data = 1;
}
 
 message performance_log_resp{
	required uint32 errorCode = 1;
}
///******************************上报测速结果 cmd******************************/


enum speedStartTypeE{
	SPEED_START_TYPE_PDP = 0;
	SPEED_ACTION_TYPE_POS_CHANGE = 1;
	SPEED_ACTION_TYPE_MANUAL = 2;
}

message DetectionResult{
	required int32 dns =1 ; // 0 为失败，1为成功，10为重新访问dns失败 // TODO 这里定义成功和失败跟http相反？
	required int32 maxtime = 2; //ping最大时长 
	required int32 avgtime = 3 ;//ping平均时长
	required int32 mintime = 4;//ping最小时长
	required int32 http = 5;//获取http头：0为成功，1为失败，10为重定向
	required int32 downloadbyte =6; //下载字节数
	required int32 downloadtime = 7 ;//下载时长
}
message Upload_Speed_Detection_Result{
	repeated PlmnInfo plmn = 1;//3个byte表示一个plmn
	required uint32 lac = 2;//位置
	required uint32 strength = 3;//信号强度
	required uint32 sn = 4; //url组编号
	required speedStartTypeE startType =5;//0为pdp拨号触发, 1为位置变化触发, 2为手工测速上报结果
	required uint32 actType = 6;//用一个字节表示：1为ping, 2为dns, 4为http 头, 8为http下载
	repeated DetectionResult result = 7;//每个测速网址一个测速结果
	optional uint32 smartPriorityEN = 8;//新增加的区分新老版本字段，0为不支持智能优选，1为支持智能优选(新增) 
}

message Upload_Speed_Result_Resp {
	required uint32 errorCode = 1;
}
///******************************上报SESSIONID cmd******************************/

message Upload_SessionId_Req{

}

message Upload_SessionId_Resp{
	required uint32 errorCode=1;
}
//终端上报网络状态
message Upload_network_state{
	optional uint32 lac = 1; // 位置编号
	optional uint32 cellid=2;   	// 基站编号
	optional uint32 rssi =3;    // 信号强度
	optional string mcc =4;  // 移动国家码
	optional string mnc =5 ;   // 移动网络码
	optional uint32 rat = 6;// 网络制式
	optional uint32 rscp = 7;// 接收信号码功率
	optional uint32 ecio = 8;// 信号接收质量
	optional uint32 band = 9;// 网络带宽
	optional uint32 tx =10;// 发射功率
}
//响应
 message Upload_network_state_resp{
	required uint32 errorCode = 1;
} 
//上传抓QXDM LOG功能配置信息
//文件操作命令为查询时返回
message report_qxdm_cfg_info{
	required uint64 imei =1;
	required uint32 board_type = 2;//0：主板;1:副板
	required uint32 auto_switch = 3;
	required file_opt_config_param config = 4;
}

message report_qxdm_cfg_info_resp{
	required uint32 errorCode = 1;
}

//终端休眠通知服务器
enum SleepNoticeCtrlE{
	SLEEP_NOTICE_CTRL_START = 1;
	SLEEP_NOTICE_CTRL_STOP = 2;
}

message Ter_Sleep_Notice_Req{
	required SleepNoticeCtrlE ctrl = 1;	// 开启或者关闭休眠
	optional uint64 vsim_imsi = 2;		// vsim卡的imsi
	repeated PlmnInfo eplmn = 3;    	// 网络状态
}

message Ter_Sleep_Notice_Resp{
	required uint32 errorCode = 1;  // 服务器返回错误码
}

//系统配置参数
message System_config_data_req{
	required string sid = 1;
	required string cfg = 2;
	required string did = 3;
	required string flg = 4;
	optional string usr = 5;
}

message Ipv4_type
{
	required uint32 ipv4 = 1;
	required uint32 port = 2;
}

message Ipv6_type
{
	repeated uint32 ipv6 = 1;
	required uint32 port = 2;
}
message Ip_type
{
	optional Ipv4_type Ipv4_ip = 1;
	optional Ipv6_type Ipv6_ip = 2;
}
message System_config_data_rsp{
	required uint32 errorCode = 1;  // 服务器返回错误码
	optional uint32 type = 2;	//更新标志 0：不更新 1：更新
	optional string version = 3;
	optional Ip_type root_ip = 4;
	repeated Ip_type server_ip = 5;//max 5 server ip
}

//GPS功能控制响应（查询命令）
message Upload_gps_cfg
{
	optional Gps_switch_state network_gps_switch_state = 1;
	optional Gps_switch_state hard_gps_switch_state = 2;
}

message Upload_gps_cfg_rsp
{
	required uint32 errorCode = 1;
}

// 流量授权消息类型
enum Flow_auth_req_type{
	FLOW_AUTH_REQ_INIT = 1;  // 初始消息
	FLOW_AUTH_REQ_UPDATE = 2; // 更新消息
	FLOW_AUTH_REQ_TERMINAL = 3; // 终止消息
	FLOW_AUTH_REQ_DEFAULT = 4; // 透支额度流量更新消息
	FLOW_AUTH_REQ_SUPPLY = 5; // 补报消息
}

// 流量授权账户信息
message Flow_auth_user_account{
	optional string username = 1; // 用户名
	optional uint64 imei = 2; //种子卡imei
}

// 网络制式, 终端上报给服务器, 主板的参数, 如果主板未获取到则不填
enum Flow_auth_rat_type{
	FLOW_AUTH_RAT_TYPE_2G = 1;
	FLOW_AUTH_RAT_TYPE_3G = 2;
	FLOW_AUTH_RAT_TYPE_4G = 3;
}

// 终端gps位置, 如果未获取到, 不上报
message Ter_gps_position{
	required double longitude = 1; //终端接入地点的经度
	required double latitude = 2; //终端接入地点的纬度
}

// 流量授权源, 分为用户授权和vsim卡授权
enum Flow_auth_src{
	FLOW_AUTH_SRC_USER = 1; // 用户授权
	FLOW_AUTH_SRC_VSIM = 2; // 卡授权
}

// qos结果
enum User_qos_result_e{
	USER_QOS_RESULT_OK = 0; // 成功
	USER_QOS_RESULT_FAIL = 1; // 失败
}

message User_qos_result{
    optional string seq = 1;
    optional User_qos_result_e result = 2;
}

// 流量授权组结果
message Flow_auth_rating_group_result{
	required uint32 group_id = 1;  // 授权组id
	required uint32 duration = 2;  // 授权组使用时常,单位s
	required uint64 up_flow = 3; // 上行流量 单位 Byte
	required uint64 down_flow = 4; // 下行流量 Byte
	repeated User_qos_result qos_result = 5; // 流控设置结果
}

// 流量授权请求
message Flow_auth_req{
	required uint32 sn = 1;//请求返回时候必须必须返回此sn
	required Flow_auth_req_type req_type = 2; // 请求消息类型
	required Flow_auth_src auth_src = 3;  // 授权来源
	required uint32 req_id = 4;  // 请求id, 从0开始, 中与session唯一标识该授权请求
	required int32 time_stamp = 5; // 时间戳, 1970年到当前的秒数

	optional Flow_auth_user_account account = 6; // 用户信息, 用户授权时用到
	optional uint64 imsi = 7;  // vsim卡信息, 卡授权时用到
	optional string mcc = 8; // 国家码
	optional string mnc = 9; // 地区码, 取主板值 主板值未取到是用副板值
	optional Flow_auth_rat_type rat = 10; // 网络制式, 取主板网络制式, 如果主板未取到, 则不填
	optional uint32 lac = 11; // 位置区, 
	optional Ter_gps_position pos = 12; // 终端gps位置
	repeated User_qos_result qos_result = 13; // 限速结果
	repeated Flow_auth_rating_group_result results = 14;  // 流量结果
	optional string old_sessionid = 15; // 流量补报的时候使用
	optional uint64 sys_up_flow = 16; // 系统上行
	optional uint64 sys_down_flow = 17; // 系统下行
	optional string lang_type = 18; //语言类型
	optional uint64 user_up_flow = 19; // 用户上行
	optional uint64 user_down_flow = 20; // 用户下行
}

// 流量使用完成后动作
enum Flow_useup_action{
	FLOW_USEUP_ACTION_REFUSE = 1; // 拒绝使用
	FLOW_USEUP_ACTION_REDIRECT = 2; // 地址重定向
	FLOW_USEUP_ACTION_SWITCH_VSIM = 3; // 换卡 
}

// 流量使用完后处理
message Flow_useup_info{
	required Flow_useup_action action = 1; // 动作
	optional uint32 addr_type = 2; // 地址类型
	optional string addr = 3; // 地址
}

enum Qos_effect_type{
    QOS_EFFECT_TYPE_IMMEDIATELY = 1; // 立即执行
    QOS_EFFECT_TYPE_AFTER_FLOW_USEUP = 2; //流量用完后执行
}

// 流量授权 qos设置
message User_qos_set{
    required string seq = 1; // 流水号 全球唯一码
	required uint32 priority = 2; // 优先级, 用户授权 卡授权 手动授权基于优先级配置
	required Qos_effect_type type = 3; // 生效类型
	required uint32 rate_up = 4; // 上行速率 kBps
	required uint32 rate_down = 5; // 下行速率 kBps
	required bool is_display = 6; // 是否显示中UI上
}

// 用户套餐信息
message User_aoc_info{
	optional string name = 1; // 套餐名称
	optional double balance = 2; // 套餐余额 欧元
	optional uint64 raltable = 3; // 套餐使用量 Byte
	optional uint64 remnant = 4; // 套餐余量 Byte
}

// 流量授权返回码
enum Flow_auth_ret_code{
	FLOW_AUTH_RET_OK = 0; // 成功
}

// 流量授权组
message Flow_auth_rating_group{
	required uint32 group_id = 1; // 组id
	required Flow_auth_ret_code ret = 2; // 返回码
	required uint64 auth_flow = 3; // 授权流量
	required uint64 threshold = 4; // 授权阈值, 比如授权50M,阈值为10M,则终端发送更新授权的时候流量使用必须中40-50M之间
	optional uint32 valid_time = 5; // 可用时间 单位s, 从收到resp开始算, 到了时间后必须上报update或terminal消息.
	optional User_aoc_info aoc = 6; // 用户套餐信息, 在UI上显示用
	repeated User_qos_set qos = 7; // 流控信息, 比外面的qos优先级低
}

message Flow_auth_resp{
	required uint32 errorCode = 1; //100 成功
	optional uint32 sn = 2;//跟请求时候的sn必须一致
	required Flow_auth_req_type req_type = 3; // 请求消息类型
	optional Flow_auth_ret_code ret = 4; // 授权返回值
	optional Flow_auth_src auth_src = 5; // 授权来源
	optional uint32 req_id = 6; // 请求id,与req消息对应
	repeated Flow_auth_rating_group groups = 7; // 授权组, 一个或多个
	repeated User_qos_set qos = 8; // 流控信息
	optional Flow_useup_info useup_info = 9; // 使用完成后的动作,如果有这个消息,表明这时最后一次流量授权,使用完成后不让用户使用,或者换卡
}


///*************************************RTU有关
message RTU_Send_SMS_Result_Report
{
	required uint32 id = 1; 
	required uint32 err_code = 2;             //错误码
}
message RTU_Send_SMS_Result_Report_resp
{
	required uint32 errorCode = 1;
}
//接收短信上报
message RTU_Send_SMS_Unsoli
{      
	required string phone_num = 1;      
	required string sms_value = 2;            //短信内容

}

message RTU_Send_SMS_Unsoli_resp
{      
	required uint32 errorCode = 1;

}


message RTU_Phone_Call_Report 
{
    required uint32 err_code = 1;             //错误码
}

message RTU_Phone_Call_Report_resp 
{
    required uint32 errorCode = 1;
}

//远程at返回结果
message RTU_Remote_AT_Result
{
	required uint32 err_code = 1;
	optional string at_resp = 2;
}

message RTU_Remote_AT_Result_resp
{
	required uint32 errorCode = 1;
}
//终端上报任务结果
message Rtu_Task_Result_Upload
{
    required string key = 1;//任务标识
    required int32 result = 2;  //任务结果 0为成功，1失败
    required string registerPlmn = 3;  //注册PLMN
    required int32 registerRat = 4;  //注册制式
    required uint32 lac = 5; 
    required uint32 cellid = 6;
    required string speed = 7;  //协商速率
    required string failReason = 8;  //失败原因
}

message Rtu_Task_Result_Upload_resp
{
	required uint32 errorCode = 1;
}

//RTU任务
message Rtu_Task_Req
{
    required string key = 1;//任务标识
}

//RTU卡任务命令回执
message Rtu_Task_Req_Ack
{
	required string key=1;//任务标识
}


//RTU任务
message RtuTask
{
	required RtuTaskType task_type=1;
	optional RtuSMSReq rtu_sms_req=2;
	optional RtuUSSDReq rtu_ussd_req=3;
}

//RTU任务类型
enum RtuTaskType
{
	RTU_SMS=0;//短信
	RTU_USSD=1;//USSD
	RTU_TEST=2;//测卡
}

//RTU短信任务
message RtuSMSReq
{
	required string number=1;
	required string message=2;//短信内容
}


//RTU USSD任务
message RtuUSSDReq
{
	required string message=1;//USSD命令内容
}

//CMD_PHYSIM_LOGIN_REQ = 61; //实体卡登录请求
message PhySimLoginReq
{
	required uint64 imei = 1;           //终端设备号（副板）
	required uint64 phySimImsi = 2;     //实体卡IMSI
	required string deviceType = 3;     //设备类型 G1 G1S G2 E1 G3
	required string version =4;         //终端软件版本
	required string plmn = 5;           //登陆区域
	required uint32 lac = 6;            //区域码
	required uint32 cid = 7;            //小区号
	optional uint32 devStartTime = 8;   //开机时间
	optional uint32 rssi = 9;           //信号强度
	optional uint32 rat = 10;           //网络制式
	optional uint32 energy = 11;        //电池电量百分比 (范围：0~100)
}

//CMD_PHYSIM_LOGIN_RESP = 62; //实体卡登录响应
message PhySimLoginResp
{
	required uint32 errorCode = 1;          //见错误码统一定义文档
	required string sessionId =2;           //sessionID，全球唯一
	required uint32 ufThresholdInKbytes = 3;//流量上报阈值，单位：K bytes
	required uint32 ufInterval = 4;         //流量上报时间间隔，单位：秒
	required uint32 heartBeatInterval = 5;  //心跳间隔，单位：秒
}

//CMD_PHYSIM_LOGOUT_REQ = 63; //实体卡退出请求
message PhySimLogoutReq
{
	optional uint32 cause = 1;//退出原因 
}

//CMD_PHYSIM_LOGOUT_RESP = 64; //实体卡退出响应
message PhySimLogoutResp
{
	required uint32 errorCode = 1; //见错误码统一定义文档
}

//CMD_PHYSIM_HEART_BEAT = 65; //实体卡心跳请求
message PhySimHeartBeatReq
{

}

//CMD_PHYSIM_HEART_BEAT_RESP = 66; //实体卡心跳响应
message PhySimHeartBeatResp
{

}

//CMD_PHYSIM_UF_REQ= 67; //实体卡流量上报请求
message PhySimUploadFlowReq
{
	required  uint32 ufId = 1;                //每次登录从0开始，上报成功依次加1
	required  uint64 PhySimImsi = 2;          //实体卡imsi
	required  uint64 flowSizeup = 3;          //用户流量上行
	required  uint64 flowSizedown = 4 ;       //用户流量下行
	required  uint64 systemFlowSizeUp = 5;    //系统流量上行
	required  uint64 systemFlowSizeDown = 6;  //系统流量下行
	optional  uint64 imei = 7;                //设备Imei号（副板）
}

//CMD_PHYSIM_UF_RESP= 68;      //实体卡流量上报响应
message PhySimUploadFlowResp
{
	required uint32 errorCode = 1;  //见错误码统一定义文档
}

message upload_auto_switch_vsim_resp 
{
	required uint32 errorCode = 1;
}


message user_account_combo_type
{
	required string name = 1; //套餐名
	required double intflowbyte = 2;//总共流量
    required double surplusflowbyte = 3;//剩余流量
    required uint64 start_time = 4;//起始时间
    required uint64 end_time = 5;//结束时间
    required uint32 isused = 6; //1为当前使用套餐，0为当前未用套餐  
}
message user_account_display_req_type
{
	required string langtype = 1;	//语言简写
}

message user_account_display_resp_type
{
	required uint32 errorCode = 1;
	optional double amount = 2; //剩余金额
	optional double rate = 3; //多少钱一兆，费率
	optional string unit = 4;	//货币单位
	optional string country_name = 5; //套餐属于哪个国家
	repeated user_account_combo_type user_account_combo = 6; //套餐信息
	optional string dispaly_flag = 7; //账户/套餐/余额/累积量 显示风格
	optional double accumulated_flow = 8;  // 流量使用累积量 unit:KByte
	optional string cssType = 9;
}

message upload_lac_change_type
{
	required string old_plmn = 1;
	required string new_plmn = 2;
	required uint32 old_lac = 3;
	required uint32 new_lac = 4;
	required uint32 old_cellid = 5;
	required uint32 new_cellid = 6;
}

message upload_lac_change_resp_type
{
	required uint32 errorCode = 1;
}


//******** softsim for seed sim start *************
//softsim 不可用信息 
message SoftsimDetailUnusable{
	required string mcc = 1;
	required string mnc = 2;
	required uint32 errorCode = 3;
	optional uint32 subErr = 4;
}

//softsim状态信息 
message SoftsimStatus{
	required uint64 softsim = 1;
	required uint64 timeStamp = 2;
	optional bool isInUsed = 3;
	repeated SoftsimDetailUnusable unusables = 4;
}

// softsim更新请求 
message UpdateSoftsimStatusReq{
	required string username = 1;
	required string mcc = 2;
	required string mnc = 3;
	required uint64 imei = 4;
	repeated SoftsimStatus softsims = 5;
}

//softsim更新响应
message DispatchSoftsimRspOrder{
	required string order = 1;
	required uint32 errcode = 2;
	repeated uint64 softsims = 3;
}

//softsim 更新响应 
message UpdateSoftsimStatusRsp{
	required uint32 errorCode = 1;
	required string username = 2;
	repeated DispatchSoftsimRspOrder orders = 3; //不更新的订单不用填。
	repeated uint64 needUpdateSims = 4;
}

// softsim分卡请求 
message DispatchSoftsimReq{
	required string username = 1;
	required uint64 imei = 2;
	repeated string order = 3;
	
}

// softsim 分卡响应 
message DispatchSoftsimRsp{
	required uint32 errorCode = 1;
	required string username = 2;
	repeated DispatchSoftsimRspOrder orders = 3;
}

// softsim 信息获取 
message GetSoftsimInfoReq{
    repeated uint64 imsi = 1;
}

message SoftsimInfo{
    required uint64 imsi = 1;
    required bool usable = 2;
    required uint64 timeStamp = 3;
    optional uint64 virtualImei = 4;
	optional string apn = 5;
	optional bool roamEanble = 6;
	optional uint32 rat = 7;
	optional string ki = 8;
	optional string opc = 9;
	optional string iccid = 10;
	optional string msisdn = 11;
	optional string plmnBinRef = 12;
	optional string feeBinRef = 13;
	optional string fplmnRef = 14;
}

// softsim 信息获取响应 
message GetSoftsimInfoRsp{
    required uint32 errorCode = 1;
    repeated SoftsimInfo softsims = 2;
}

enum SoftsimBinType{
    PLMN_LIST_BIN = 1; // 漫游文件
    FEE_BIN = 2;  // 资费文件
	FPLMN_BIN = 3; // forbidden列表
}

message SoftsimBinReqInfo{
    required SoftsimBinType type = 1;
    required string binref = 2;
}

// softsim bin文件获取
message GetSoftsimBinReq{
	repeated SoftsimBinReqInfo reqs = 1;
}


message SoftsimBinInfo{
    required SoftsimBinType type = 1;
	required string binref = 2;
	required bytes  data = 3;
}

// softsim bin获取响应
message GetSoftsimBinRsp{
	required uint32 errorCode = 1;
	repeated SoftsimBinInfo bins = 2;
}

enum SeedCardType{
	SOFTSIM = 1; // 软卡 
	PHYSIM = 2;  // 物理卡
}

//softsim流量上报
message SoftsimFlowUploadReq{
	required uint32 reqId = 1;
	required string username = 2;
	required uint64 imei = 3;
	required string imsi = 4;
	required uint32 startTime = 5;
	required uint32 endTime = 6;
	required string mcc = 7;
	required uint64 upFlow = 8;
	required uint64 downFlow = 9;
	required uint64 upUserFlow = 10;
	required uint64 downUserFlow = 11;
	required uint64 upSysFlow = 12;
	required uint64 downSysFlow = 13;
	required SeedCardType cardType = 14;
}

//softsim流量上报响应
message SoftsimFlowUploadRsp{
	required uint32 errorCode = 1;
	required uint32 reqId = 2;
}

//******** softsim for seed sim end *************

//***************************************************
//*
//* 副板软卡相关与服务器交互接口数据定义
//*
//****************************************************

// 请求分副板softsim卡 
message DispatchExtSoftsimReq{
	required string username = 1;	// 用户账号 
	required uint64 imei = 2;	// 设备imei号 
	required uint32 reason = 3;	// 请求分卡原因，服务器下发的s2c触发的副板softsim分卡请求， 需要这个吗，具体再讨论 
}

message ReclaimImsi{
	optional uint64 imsi = 1;	// 回收的softsim 的imsi 
}

message ExtSoftsimItem{
	required uint64	imsi = 1;	// 卡imsi 号 
	required uint64	timestamp = 2;
	required int32	type = 3;	// 卡类型 0： 硬卡， 1：软卡
	required int32  reason = 4;
	required bool	isUsed = 5;	// 卡是否当前使用 0： 当前未使用， 1：当前正在使用 
	optional string	mcc = 6;	// 若卡当前使用， 卡注册上的mcc 
	optional string	mnc = 7;	// 若卡当前使用， 卡注册上的mnc 
	optional bool  plmnbinExist = 8;
	optional bool  ratebinExist = 9;
	optional bool  fplmnbinExist = 10;
	optional string apn = 11;
	optional string vimei = 12;
	optional string plmnref = 13;
	optional string rateref = 14;
	optional string fplmnref = 15;
}


// 请求分副板softsim卡响应 
message DispatchExtSoftsimRsp{
	required uint32 errorCode = 1;		// 返回的错误码 
	repeated SoftsimInfo softsims = 2;	// 软卡信息列表 借用dsds 分卡的软卡信息结构体 
	repeated ReclaimImsi reclaimList = 3;	// 回收软卡列表 
}

// 副板释放softsim卡后， 将信息返回服务器 
message ReclaimExtSoftsimReq{
	required uint32	     reason = 1;	// 是否的软卡的原因 
	repeated ReclaimImsi softsimList = 2;	// 待释放软卡列表 
	repeated ExtSoftsimItem simList = 3;	// 种子卡列表 
	required string	     user = 4;
	required string      imei = 5;
}

// 副板释放softsim响应 
message ReclaimExtSoftsimRsp{
	required uint32 errorCode = 1;		// 返回错误码 
}	


// 上报副板软卡列表请求 
message UploadExtSoftsimListReq{
	repeated ExtSoftsimItem softsimList = 1;	// 副板卡列表信息 
	required string	user = 2;			// 账号 
	required string imei = 3;			// imei 
	optional bool  ruleExist = 4;
	optional int32  reason = 5;
}

// 上报副板软卡列表响应 
message UploadExtSoftsimListRsp{
	required uint32 errorCode = 1;		// 返回错误码 
}

message ExtSoftsimRuleReq{
	required string imei = 1;	// 规则列表请求 
}

message ruleItem{
	required string mccList = 1;	// 规则列表iso 信息 
	required string plmns = 2;	// 规则列表plmn信息 
	required uint32 usermode = 3;
}

message ExtSoftsimRuleRsp{
	required uint32 errorCode = 1;
	repeated ruleItem ruleList = 2;	// 规则列表响应 
}

message ExtSoftsimUpdateItem{
	optional uint64 imsi = 1;
	optional int32  result = 2;
}

message ExtSoftsimUpdateReq{
	required string imei = 1;
	required int32	filetype = 2;
	repeated ExtSoftsimUpdateItem simItem = 3;
}

message ExtSoftsimUpdateRsp{
	required uint32 errorCode = 1;
}

message softsimError {
	optional uint64 imsi = 1;
	optional uint32 reason = 2;
}

message ExtSoftsimUploadErrorReq{
	required uint32 reason = 1;
	required string user = 2;
	required string imei = 3;
	repeated softsimError list = 4;
}

message ExtSoftsimUploadErrorRsp{
	required uint32 errorCode = 1;
}

message softsim_seed_warning_req{
	required string username = 1;	// 用户账号 
	required uint64 imei = 2;	// 设备imei号 
	required int32 type = 3;      //错误类型
	required int32 mcc = 4;      //国家码
	optional string detail = 5;   //详情  根据错误类型，不同定义
}

message softsim_seed_warning_rsp{
	required uint32 errorCode = 1;
}

//***************************************************
//*
//* 副板软卡相关与服务器交互接口数据定义
//*
//*****************************************************



// 简单的登陆，只校验用户名和密码 
message SimpleLoginReq{
    required uint32 loginType =1;    //0:绑定;1:用户名密码
    required string usercode = 2;    //用户名
    required string password = 3;    //密码
    required string deviceType = 4;  //类型 G1 G1S G2 E1 G3 P2
    required string version = 5;     //终端软件版本
    optional uint64 imei = 6;        //终端设备号
}

message SimpleLoginRsp{
    required uint32 errorCode = 1; //100 成功，其它错误码待定义
    optional string sessionId = 2; //ass返回的sessionID，后续请求都要求携带
    optional string usercode = 3; //
    optional string password = 4; //
    //增加服务器时间
    optional double serverTime = 5;
    optional string accessToken=6; //token验证码留给设备APP
}

message SimpleLogoutReq{
    optional uint32 cause = 1;//退出原因
}

message SimpleLogoutRsp{
    required uint32 errorCode  = 1;
}

	
//请求系统通知	
message Notify_Req{
	required string language = 1;	//语言类型
}	
//回复系统通知	
message Notify_Rsp{
	required uint32 errorCode = 1;
}	
enum CommonErrorcode{
	SESSION_OUT = 2160001;
}

message Frequent_auth_detection_result_req{
	required string imsi       = 1;
	required string imei       = 2;
	required string plmn       = 3;
	required uint32 rat        = 4;
//	Uint32 simtype : 定义卡支持的制式，下发格式，按bit位定义支持的网络制式:
//	RAT_CDMA_RADIO          --0
//	RAT_HDR_RADIO            --1      // CDMA-HDR
//	RAT_GSM_RADIO            --2
//	RAT_WCDMA_RADIO         --3
//	RAT_LTE_RADIO             --4        //LTE-FDD  LTE-TDD
//	RAT_TDS_RADIO             --5       //TDSDMA
//
//    例如下发联通卡，可支持的网络制式为：011100；  转换为10进制数为28.
//	  例如上报2G:000100 (转换为10进制数为4),3G:001000(转换为10进制数为8),4G:010000(转换为10进制数为16)
	required uint32 type       = 5; // 频繁鉴权的类型  1:SR  2:TAU 3:other 4：无（没有发生频繁鉴权）
	required uint32 cellid 	   = 6;
	required uint32 cellid_old = 7; // 只有TAU频繁鉴权（type=2），此值有效
	required uint32 tac        = 8;
	required uint32 tac_old    = 9; // 只有TAU频繁鉴权（type=2），此值有效
	required uint32 sr_count = 10;
	required uint32 tau_count = 11;
	required uint64 apdu_time = 12; //发生鉴权的时间
	required string extm_plmn = 13;  // 副板注册网络
	required uint32 extm_rat = 14;  //副板制式
	required uint32 extm_lac = 15;  //副板lac
	required uint32 extm_cellid = 16;  //副板cellid
}

message Frequent_auth_detection_result_rsp{
	required uint32 errorCode = 1;  // 100 成功  200失败
}

message Cloudsim_socket_ok_req{
	required string imsi = 1;  // vsim卡的imsi
	required string imei = 2;
	optional uint32 modul = 3;  //按位定义是哪个模块使用:
	//频繁鉴权          --0
	//限速有关          --1
	//例如限速：10；
}

message Cloudsim_socket_ok_rsp{
	required uint32 errorCode = 1; //按位定义各个模块结果:  0成功，1失败
	//频繁鉴权          --0
	//限速有关          --1
	//例如限速失败：10；
}

//上行命令  不区分req和resp
message AssReq {
	optional string sessionid = 1;
	optional LoginReq          loginReq         = 2;
	optional LogoutReq         logoutReq        = 3;
	optional QueryUserParamReq queryUserParamReq = 4;
	optional UploadFlowsizeReq uploadFlowsizeReq = 5;
	optional SupplemenUploadFlowsize supplemenUploadFlowsize = 6;
	optional DispatchVsimReq dispatchVsimReq =7;
	optional SwitchVsimReq switchVsimReq = 8;
	optional ApduAuth apduAuth = 9;
	optional GetVsimInfoReq getVsimInfoReq = 10;
	optional GetBinFileReq getBinFileReq =11;
	optional HeartBeat heartBeat = 12;	
	optional Reset_VsimReq resetvsimreq = 13;
	optional SpeedDetectionUrlReq speeddetectionreq = 14;	//请求检测网址
	optional Report_SearchNet_Result ReportSearchNetResult = 15; //终端上报搜网结果
	optional Upload_basic_info UploadBasicInfo = 16;//上传终端基本信息
	optional Upload_Current_Speed UploadCurrentSpeed  = 17;//上报限速结果 
	optional Performance_log_report PerformanceLogReport = 18;//性能日志
	optional Upload_Speed_Detection_Result UploadSpeedDetectionResult = 19;//上报测速结果
	optional Upload_SessionId_Req UploadSessionId_Req = 20;//上报SESSIONID)
	optional S2c_cmd_resp s2c_resp = 21;
	optional report_qxdm_cfg_info qxdm_cfg_info = 22;
	optional Ter_Sleep_Notice_Req TerSleepNoticeReq = 23;
	optional Upload_network_state UploadNetworkState = 24;
	optional QueryUserAcountReq  QueryAountReq = 25;
	optional System_config_data_req SystemConfigDataReq = 26;
	optional Upload_gps_cfg UploadGpsCfg = 27;
	optional Flow_auth_req FlowAuthReq = 28; // 流量授权请求
	optional RTU_Send_SMS_Result_Report RtuSendSMSResultReport = 29;//上报发短信结果
	optional RTU_Phone_Call_Report RtuPhoneCallReport = 30;//上报打电话结果
	optional RTU_Send_SMS_Unsoli RtuSendSMSUnsoli = 31;//上报接收短信
	optional RTU_Remote_AT_Result RtuRemoteATResult = 32;//上报AT结果
	optional Rtu_Task_Req_Ack RtuTaskReqAck = 33;
	optional Rtu_Task_Result_Upload RtuTaskResultUpload  = 34;
	optional PhySimLoginReq mPhySimLoginReq = 35;  //实体卡登录请求
	optional PhySimLogoutReq mPhySimLogoutReq = 36;  //实体卡退出请求
	optional PhySimHeartBeatReq mPhySimHeartBeatReq = 37;  //实体卡心跳请求
	optional PhySimUploadFlowReq mPhySimUploadFlowReq = 38;  //实体卡流量上报
	optional auto_switch_vsim_cfg_type auto_switch_vsim_cfg = 39;//上传自动换卡配置
	optional user_account_display_req_type user_account_display_req = 40; //请求账号显示信息
	optional upload_lac_change_type upload_lac_change = 41;//上报lac变化
	optional UpdateSoftsimStatusReq updateSoftsimStatusReq = 42;  //softsim更新请求
	optional DispatchSoftsimReq dispatchSoftsimReq = 43;   //softsim分卡请求
	optional GetSoftsimInfoReq getSoftsimInfoReq = 44; // softsim信息获取
	optional GetSoftsimBinReq getSoftsimBinReq = 45;   //softsim bin文件获取
	optional SoftsimFlowUploadReq softsimFlowUploadReq = 46; //softsim流量上报
	optional SimpleLoginReq simpleLoginReq = 47; //简单登陆请求
	optional SimpleLogoutReq simpleLogoutReq = 48; // 简单退录请求
	optional Notify_Req NotifyReq = 49;	//通知请求
	optional DispatchExtSoftsimReq extSoftsimReq = 50;	// 副板软卡请求 
	optional ReclaimExtSoftsimReq  reclaiExtSoftsimReq = 51;  // 副板软卡释放请求 
	optional UploadExtSoftsimListReq uploadExtSoftsimListReq = 52;	// 上报副板卡列表请求 
	optional ExtSoftsimRuleReq	extSoftsimRuleReq = 53;		// 请求副板规则列表 
	optional ExtSoftsimUpdateReq	extSoftsimUpdateReq = 54;
	optional ExtSoftsimUploadErrorReq extSoftsimUploadErrorReq = 55;
	optional softsim_seed_warning_req extSoftsimWarnReq = 56;
	optional Frequent_auth_detection_result_req freAuthDetectResultReq = 57;  // 频繁鉴权检测结果上报请求
	optional Cloudsim_socket_ok_req cloudsimSocketOkReq = 58;  // 云卡socket建立成功上报请求
}

//下行命令  不区分req和resp
message AssResp {
	optional CommonErrorcode errorcode = 1;
    optional LoginResp          loginResp         = 2;
    optional LogoutResp         logoutResp        = 3;
	optional QueryUserServiceListResp queryUserServiceListResp  = 4;
	optional UploadFlowsizeResp uploadFlowsizeResp  = 5;
	optional SupplemenUploadFlowsizeResp supplemenUploadFlowsizeResp =6;
	optional DispatchVsimResp dispatchVsimResp =7; 
	optional SwitchVsimResp switchVsimResp =8;
	optional ApduAuthResp apduAuthResp =9;
	optional GetVsimInfoResp getVsimInfoResp = 10;
	optional GetBinFileResp getBinFileResp =11;

	optional HeartBeatResp heartBeatResp = 12;
	optional ResetVsimResp resetvsimresp = 13;
	optional SpeedDetectionUrlResp speeddetectionresp = 14;
	optional S2c_cmd_req s2c_req = 15;
	
	optional Upload_SessionId_Resp UploadSessionIdResp = 16;//上报SESSIONID响应
	optional Upload_Speed_Result_Resp UploadSpeedResultreResp = 17;
	optional performance_log_resp PerformanceLogResp = 18;
	optional upload_current_speed_resp UploadCurrentSpeedResp = 19;
	optional report_searchnet_result_resp ReportSearchResultResp = 20;
	optional upload_basic_info_resp UploadBasicInfoResp = 21;
	optional Ter_Sleep_Notice_Resp TerSleepNoticeResp = 22;
	optional Upload_network_state_resp UploadNetworkStateResp = 23;
	optional QueryUserAcountResp QueryAcountResp = 24;
	optional System_config_data_rsp SystemConfigRsp = 25;
	optional Flow_auth_resp FlowAuthResp = 26; // 流量授权响应
	optional Rtu_Task_Req RtuTaskReq = 27; 
	optional PhySimLoginResp mPhySimLoginResp = 28;  //实体卡登录响应
	optional PhySimLogoutResp mPhySimLogoutResp = 29;  //实体卡退出响应
	optional PhySimHeartBeatResp mPhySimHeartBeatResp = 30;  //实体卡心跳响应
	optional PhySimUploadFlowResp mPhySimUploadFlowResp = 31;  //实体卡流量上报
	optional upload_auto_switch_vsim_resp auto_switch_vsim_resp = 32;//上报自动换卡配置相应
	optional user_account_display_resp_type user_account_display_resp = 33; //账号显示信息相应
	optional upload_lac_change_resp_type upload_lac_change_resp = 34;//上报LAC变化相应
	optional UpdateSoftsimStatusRsp updateSoftsimStatusRsp = 35; // softsim更新响应
	optional DispatchSoftsimRsp dispatchSoftsimRsp = 36;  //softsim分卡响应
	optional GetSoftsimInfoRsp getSoftsimInfoRsp = 37; //softsim 信息获取响应
	optional GetSoftsimBinRsp getSoftsimBinRsp = 38;   //softsim bin获取响应
	optional SoftsimFlowUploadRsp softsimFlowUploadRsp = 39;  //softsim流量上报响应
	optional SimpleLoginRsp simpleLoginRsp = 40; // 简单登陆响应
	optional SimpleLogoutRsp simpleLogoutRsp = 41; // 简单退录响应
	optional Notify_Rsp NotifyRsp = 42; //通知回复
	optional report_qxdm_cfg_info_resp ReportQxdmResp = 43;//上传QXDM配置信息响应
	optional Upload_gps_cfg_rsp UploadGpsCfgRsp = 44;//上传gps信息响应
	optional RTU_Send_SMS_Result_Report_resp SendSmsReportRsp = 45;//上报发短信结果响应
	optional RTU_Send_SMS_Unsoli_resp SmsUnsoliRsp = 46;//接收到短信上报响应
	optional RTU_Remote_AT_Result_resp RemoteAtResultRsp = 47;//上报at结果响应
	optional RTU_Phone_Call_Report_resp PhoneCallReportRsp = 48;//上报打电话结果响应
	optional Rtu_Task_Result_Upload_resp RtuTaskResultUploadRsp = 49;//上报rtu内容相应
	optional DispatchExtSoftsimRsp extSoftsimRsp = 50;	// 副板软卡请求响应 
	optional ReclaimExtSoftsimRsp  reclaiExtSoftsimRsp = 51;	// 副板软卡释放响应 
	optional UploadExtSoftsimListRsp uploadExtSoftsimRsp = 52;	// 上报副板软卡响应 
	optional ExtSoftsimRuleRsp	extSoftsimRuleRsp = 53;		// 副板请求规则列表响应 
	optional ExtSoftsimUpdateRsp	extSoftsimUpdateRsp = 54;
	optional ExtSoftsimUploadErrorRsp extSoftsimUploadErrorRsp = 55;
	optional softsim_seed_warning_rsp extSoftsimWarnRsp = 56;
	optional Frequent_auth_detection_result_rsp freAuthDetectResultRsp = 57;  // 频繁鉴权检测结果上报回应
	optional Cloudsim_socket_ok_rsp cloudsimSocketOkRsp = 58; // 云卡socket建立成功上报回应
}

